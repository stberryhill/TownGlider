[gd_scene load_steps=15 format=2]

[ext_resource path="res://SimpleGlider.tscn" type="PackedScene" id=1]
[ext_resource path="res://IslandBlurry.tscn" type="PackedScene" id=2]
[ext_resource path="res://Palette.png" type="Texture" id=4]
[ext_resource path="res://Terrain.tres" type="Material" id=5]
[ext_resource path="res://World.gd" type="Script" id=6]

[sub_resource type="BoxShape" id=1]
extents = Vector3( 8.94928, 1, 9.72853 )

[sub_resource type="PlaneMesh" id=2]

[sub_resource type="ProceduralSky" id=4]
radiance_size = 0
sky_top_color = Color( 0.803922, 0.980392, 0.94902, 1 )
sky_horizon_color = Color( 0.803922, 0.980392, 0.94902, 1 )
ground_bottom_color = Color( 0.803922, 0.980392, 0.94902, 1 )
ground_horizon_color = Color( 0.803922, 0.980392, 0.94902, 1 )

[sub_resource type="Environment" id=5]
background_mode = 2
background_sky = SubResource( 4 )
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_sky_contribution = 0.0
fog_color = Color( 0.803922, 0.980392, 0.94902, 1 )
fog_depth_begin = 1000.0
fog_depth_end = 4000.0
fog_height_min = 0.0
fog_height_max = -20.0

[sub_resource type="CubeMesh" id=8]

[sub_resource type="Shader" id=9]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.stable.mono's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.0
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 4 )

[sub_resource type="PlaneMesh" id=13]

[sub_resource type="SpatialMaterial" id=12]
flags_transparent = true
albedo_color = Color( 0, 0.431373, 0.207843, 1 )

[node name="World" type="Spatial"]
script = ExtResource( 6 )
local_noise_period = 500
height_multiplier = 200
squares = 128
square_size = 24

[node name="StaticBody" type="StaticBody" parent="."]

[node name="CollisionShape" type="CollisionShape" parent="StaticBody"]
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="StaticBody/CollisionShape"]
mesh = SubResource( 2 )
material/0 = ExtResource( 5 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 5 )

[node name="MeshInstance" type="MeshInstance" parent="."]
visible = false
mesh = SubResource( 8 )
material/0 = SubResource( 10 )

[node name="Water" type="MeshInstance" parent="."]
transform = Transform( 4000, 0, 0, 0, 4000, 0, 0, 0, 4000, 0, 0, 0 )
mesh = SubResource( 13 )
material/0 = SubResource( 12 )

[node name="TerrainStaticBody" type="StaticBody" parent="."]
visible = false

[node name="SimpleGlider" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 400, 0 )
initial_velocity = Vector3( 0, 0, -200 )

[node name="Island-blurry" parent="." instance=ExtResource( 2 )]
visible = false

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.811373, 0.579016, -0.0800897, -0.182729, 0.3814, 0.90617, 0.555233, -0.720607, 0.415261, 0, 0, 0 )
visible = false
light_color = Color( 1, 0.992157, 0.894118, 1 )
light_energy = 2.0
light_indirect_energy = 7.088
